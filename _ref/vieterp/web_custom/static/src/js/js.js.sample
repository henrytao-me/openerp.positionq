/*---------------------------------------------------------
 * VietERP web_custom
 *---------------------------------------------------------*/

openerp.web_custom = function (instance) {

var _lt = instance.web._lt;

instance.web.views.add('custom', 'instance.web_custom.view');
instance.web_custom.view = instance.web.View.extend({
    template: "CustomView",
    display_name: _lt('Custom'),
    view_type: "custom",

    init: function(parent, dataset, view_id, options) {
        var self = this;
        this._super(parent);
        this.set_default_options(options);
        this.dataset = dataset;
        this.view_id = view_id;
    },

    view_loading: function(r) {
        return this.load_custom_view(r);
    },

    destroy: function () {        
        this._super();
    },

    load_custom_view: function(fields_view_get) {
        // TODO: move  to load_view and document
        alert('a');
        return;
        
        
        var self = this;
        this.fields_view = fields_view_get;
        this.$el.addClass(this.fields_view.arch.attrs['class']);

        this.mode = this.fields_view.arch.attrs.type || 'bar';
        this.orientation = this.fields_view.arch.attrs.orientation == 'horizontal';
				
        var width = this.$el.parent().width();
        
        this.$el.css("width", width);
        this.container = this.$el.find("#editor-render-body").css({
            width: width,
            height: Math.min(500, width * 0.8)
        })[0];

        var graph_render = this.proxy('graph_render');
        this.$el.on('click', '.oe_graph_options a', function (evt) {
            var $el = $(evt.target);

            self.graph_render({data: filter_values({
                mode: $el.data('mode'),
                legend: $el.data('legend'),
                orientation: $el.data('orientation'),
                stacked: $el.data('stacked')
            })});
        });

        this.$el.find("#graph_show_data").click(function () {
            self.spreadsheet = ! self.spreadsheet;
            self.graph_render();
        });
        this.$el.find("#graph_switch").click(function () {
            if (self.mode != 'radar') {
                self.orientation = ! self.orientation;
            }
            self.graph_render();
        });

        this.$el.find("#graph_download").click(function () {
            if (self.legend == "top") { self.legend = "inside"; }
            self.forcehtml = true;

            self.graph_get_data().done(function (result) {
                self.graph_render_all(result).download.saveImage('png');
            }).always(function () {
                self.forcehtml = false;
            });
        });
        this.trigger('graph_view_loaded', fields_view_get);
    },
    
    do_search: function(domain, context, group_by) {
        this.domain = domain;
        this.context = context;
        this.group_by = group_by;
        
    },
    
    do_show: function() {
        this.do_push_state({});
        return this._super();
    },
});
};
